/* 全ての要素（疑似要素含む）を対象とする */
*, *::before, *::after {
  margin: 0; /* 外部余白のリセット */
  padding: 0; /* 内部余白のリセット */
  box-sizing: border-box; /* widthやheightなどのサイズ指定をボーダーを含んだサイズで指定できるように変更 */
}

/* Webページ全体の設定を記載 */
:root { /* htmlを指定した場合と同じような意味合いです */
  /* 書体の設定 */
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", YuGothic, "ヒラギノ角ゴ ProN W3", Hiragino Kaku Gothic ProN, Arial, "メイリオ", Meiryo, sans-serif;
  /* 日本語の字詰を自動カーニングするように設定 */
  font-feature-settings: "palt";
  /* 標準の文字サイズを指定 */
  font-size: 12pt;

  /* 文字の色を変数に入れておく */
  /* --text-color: #46557e; */
  --text-color: #46557e;
}

body {
  /* 背景画像設定 */
  /* background-image: url("../img/5348495.jpg"); */
  background-color: #ffffff;
  background-size: cover; /* 背景画像のサイズを全体にフィットするように設定 */
  background-attachment: fixed; /* 背景画像をスクロールしても同じ位置になるように設定 */
  background-position: center center; /* 背景画像の配置が中央配置になるように設定 */
  
  display: grid; /* grid表示化 */
  place-items: center; /* bodyタグ直下に配置される要素を中央配置させる（grid表示化が必要） */

  min-height: 100vh; /* 最低高さを表示領域の100%に設定（vh:ビューハイト） */

  color: var(--text-color); /* ドキュメント全体の文字色を設定 varは変数を使用するときに使います */
}

main {
  position: absolute;
  top: 23%;
  left:23%;
  display: grid; /* grid表示化 */
  /* Grid表示のコンテンツ配置テンプレートを作成する */
  grid-template: "photo   name   " auto
                 "photo   texts  " auto
                 "photo   social " auto
                 / 300px minmax(300px, 450px);
  gap: 0 4rem;  /* コンテンツ配置の隙間サイズを指定（行間:0,列間:2文字分） */

  padding: 2rem;  /* 内側余白を2文字分 */
  max-width: 90%; /*親要素（body）の90%が最大横幅となるように調整（小さい画面への配慮） */

  
  backdrop-filter: blur(20px);  /* 背景をすりガラス状に設定 */
  border: 1px solid rgba(255, 255, 255, 0.4); /* 枠線をさりげなく指定 */
  border-right-color: rgba(255, 255, 255, 0.2); /* 枠線の色をさりげなく指定 */
  border-bottom-color: rgba(255, 255, 255, 0.2);  /* 枠線の色をさりげなく指定 */
  border-radius: 8px; /* 角丸8px */
}

/* モバイル(スマホ)での表示時にレイアウトを変更する（同じ詳細度で後から指定されたものが優先されることを利用） */
@media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
  main {
    /* モバイル表示用のGrid表示のコンテンツ配置テンプレートに変更する （コンテンツの配置を根本から変える）*/
    grid-template: "photo  " auto
                   "name   " auto
                   "texts  " auto
                   "social " auto
                   / auto;
    gap: 1rem 0;  /* コンテンツ配置の隙間サイズを変更（行間:1文字分,列間:0） */

    margin: 4rem 0; /* 外側の余白上下4文字分付ける（左右は0） */
  }
}

/* class="my-photo" */
.my-photo {
  grid-area: photo;  /* Gridテンプレートの「photo」に配置 */
  align-self: center; /* 内部の上下配置を中央寄せにする */
}

/* class="my-photo" の中の img */
.my-photo img {
  display: block; /* 画像自体を箱として表示させる */
  width: 300px; /* 横幅の設定 */
  height: 300px; /* 高さの設定 */
  border-radius: 150px; /* 角丸を縦横のサイズの半分以上の値を指定することで正方形の画像は円にくり抜かれる、99999pxなどでもOK */
}

/* モバイルでの表示時にサイズを調整する */
@media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
  .my-photo img {
    width: 70vw; /* 横幅の設定を画面横サイズの70% */
    height: 70vw; /* 高さの設定を画面横サイズの70% */
  }
}

.my-name {
  grid-area: name; /* mainタグのGridテンプレートの「name」に配置 */
  font-size: 1.5rem; /* 文字サイズ */
  /* text-shadow: -1px 1px 0 #f0c4e9; 文字の影をさりげなく入れ、ちょっとだけ立体っぽく見せる */
  text-shadow: -1px 1px 0 #b0b0b0;
  letter-spacing: 5px; /* 字間開ける */
}
.my-name_e {
  /* grid-area: name; mainタグのGridテンプレートの「name」に配置 */
  font-size: 1.5rem; /* 文字サイズ */
  /* text-shadow: -1px 1px 0 #f0c4e9; 文字の影をさりげなく入れ、ちょっとだけ立体っぽく見せる */
  text-shadow: -1px 1px 0 #b0b0b0;
  letter-spacing: 3px; /* 字間開ける */
  
}

/* モバイルでの表示時にレイアウトを変更する */
@media screen and (width < 896px) { /* 画面幅が896px未満の場合、下記CSSを使用する */
  .my-name {
    font-size: 7vw; /* 文字サイズを画面サイズの7％幅とする */
    text-align: center; /* 文字の配置をセンタリングする */
  }

  .my-name_e {
    font-size: 7vw; /* 文字サイズを画面サイズの7％幅とする */
    text-align: center; /* 文字の配置をセンタリングする */
  }
}

.my-texts {
  position: absolute;
  top: -100%;
  grid-area: texts; /* mainタグのGridテンプレートの「texts」に配置 */
}

.my-texts_e {
  position: absolute;
  top: 140%;
  grid-area: texts; /* mainタグのGridテンプレートの「texts」に配置 */
}

.my-social {
  grid-area: social;  /* mainタグのGridテンプレートの「social」に配置 */
  list-style: none; /* リストの・が邪魔なので消します */
  display: flex; /* .my-social内部をフレキシブル表示に切り替え（標準で横並びになります） */
  margin-top: 1.5rem; /* 上部に1.5文字分の外部余白を設定 */
}








/* bodyとmainの間に差し込まれるフィルタ要素 */
.background-filter {
  width: 100%;  /* bodyタグと同じ大きさにする */
  height: 100%;  /* bodyタグと同じ大きさにする */
  position: fixed; /* bodyタグの開始位置を基準として、位置を固定します */
  top: 0; /* bodyタグの開始位置を基準として、位置を固定します */
  left: 0; /* bodyタグの開始位置を基準として、位置を固定します */

  z-index: -1; /* フィルタ要素自体の重ね合わせ位置を最下部にする（bodyの上、mainの下） */

  /* 背景色と背景グラデーションの設定 */
  background-image: linear-gradient(to top, #a8edea 0%, #fed6e3 100%);

  /* 透明度の設定 */
  opacity: 0.5;
}

.my-photo figure {
  position: relative; /* 縁取り要素を追加する前に、親コンテナ(figure)の配置方法を相対配置に変更 */
}
.circle1,
.circle2,
.circle3 {
  position: absolute; /* 縁取り要素は絶対配置（基準位置は、これらの要素から親を辿って最初にposition:relativeが設定されている箇所になります。なければbodyが基準です。） */
  top: 0; /* .my-photoの開始位置と揃える */
  width: 100%;
  height: 100%;
  border-radius: 40%; /* 40%の角丸めで歪な形を作成しておく */
  z-index: -1; /* 画像と背景の間に重ねる */
}



/* rotationという名前のアニメーションを作成 */
@keyframes rotation {
  from {  /* 開始時点の装飾 */
    transform: rotate(0deg);  /* 変形操作の内、回転0度 */
  }

  to {  /* 終了時点の装飾 */
    transform: rotate(360deg); /* 変形操作の内、回転360度 */
  }
}


.circle1 {
  opacity: 0.1; /* 透明度 */
  background: #a0deff; /* 縁取りの色設定 */
  transform-origin: 50% 47%;  /* transformの基準位置を変更 */
  animation: rotation 5s infinite linear; /* rotationアニメーションの秒数と繰り返し、変化を線形に変更 */
}

.circle2 {
  opacity: 0.3;
  background: rgba(241, 196, 255, 0.849);
  transform-origin: 52% 48%;
  animation: rotation 12s infinite linear;
}

.circle3 {
  opacity: 0.2;
  background: #ffaef6;
  transform-origin: 48% 52%;
  animation: rotation 8s infinite linear;
}